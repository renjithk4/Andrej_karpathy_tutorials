# -*- coding: utf-8 -*-
"""Building_micrograd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GOILpdO3bz3dVUWAqOKvnop_-FDxwDpQ

Andrej Karpathy First Video Code
"""

# Commented out IPython magic to ensure Python compatibility.
import math
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

def f(x):
  return 3*x**2 -4*x+5

f(3.0)

xs=np.arange(-5,5,0.5)

ys=f(xs)

plt.plot(xs,ys)

x1=4
x2=0.5
h=0.000001
y1=f(x1)
y2=f(x2)
y11=f(x1+h)
y22=f(x2+h)

y1

y11

y2

y22

(f(x1+h)-f(x1))/h

x=2/3

(f(x+h)-f(x))/h

a=2.0
b=-3.0
c=4.0
d1=a*b+c
a+=h
d2=a*b+c
print(d1)
print(d2)
print((d2-d1)/h)

a=2.0
b=-3.0
c=4.0
d1=a*b+c
b+=h
d2=a*b+c
print(d1)
print(d2)
print((d2-d1)/h)

class value:


  def __init__(self,data,_child):
    self.data=data

  def __repr__(self):
    return f"value(data={self.data})"

  def __add__(self,other):
    out=value(self.data+other.data)
    return out
  def __mul__(self,other):
    out=value(self.data*other.data)
    return out

  a=2.0
  b=-3.0
  c=4.0

a*b+c
#a.__mul__(b).__add__(c)

class value:


  def __init__(self,data,_children=(),_op=''):
    self.data=data
    self._prev=set(_children)
    self._op=_op

  def __repr__(self):
    return f"value(data={self.data})"

  def __add__(self,other):
    out=value(self.data+other.data,(self,other),'+')
    return out
  def __mul__(self,other):
    out=value(self.data*other.data,(self,other),'*')
    return out

a=value(2.0)
  b=value(-3.0)
  c=value(4.0)

d=a*b+c

d

d._prev

d._op

